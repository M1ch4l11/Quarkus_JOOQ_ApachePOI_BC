/*
 * This file is generated by jOOQ.
 */
package model.company.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payments implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer customernumber;
    private String checknumber;
    private LocalDateTime paymentdate;
    private BigDecimal amount;

    public Payments() {}

    public Payments(Payments value) {
        this.customernumber = value.customernumber;
        this.checknumber = value.checknumber;
        this.paymentdate = value.paymentdate;
        this.amount = value.amount;
    }

    public Payments(
        Integer customernumber,
        String checknumber,
        LocalDateTime paymentdate,
        BigDecimal amount
    ) {
        this.customernumber = customernumber;
        this.checknumber = checknumber;
        this.paymentdate = paymentdate;
        this.amount = amount;
    }

    /**
     * Getter for <code>company.payments.customernumber</code>.
     */
    public Integer getCustomernumber() {
        return this.customernumber;
    }

    /**
     * Setter for <code>company.payments.customernumber</code>.
     */
    public void setCustomernumber(Integer customernumber) {
        this.customernumber = customernumber;
    }

    /**
     * Getter for <code>company.payments.checknumber</code>.
     */
    public String getChecknumber() {
        return this.checknumber;
    }

    /**
     * Setter for <code>company.payments.checknumber</code>.
     */
    public void setChecknumber(String checknumber) {
        this.checknumber = checknumber;
    }

    /**
     * Getter for <code>company.payments.paymentdate</code>.
     */
    public LocalDateTime getPaymentdate() {
        return this.paymentdate;
    }

    /**
     * Setter for <code>company.payments.paymentdate</code>.
     */
    public void setPaymentdate(LocalDateTime paymentdate) {
        this.paymentdate = paymentdate;
    }

    /**
     * Getter for <code>company.payments.amount</code>.
     */
    public BigDecimal getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>company.payments.amount</code>.
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Payments other = (Payments) obj;
        if (this.customernumber == null) {
            if (other.customernumber != null)
                return false;
        }
        else if (!this.customernumber.equals(other.customernumber))
            return false;
        if (this.checknumber == null) {
            if (other.checknumber != null)
                return false;
        }
        else if (!this.checknumber.equals(other.checknumber))
            return false;
        if (this.paymentdate == null) {
            if (other.paymentdate != null)
                return false;
        }
        else if (!this.paymentdate.equals(other.paymentdate))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.customernumber == null) ? 0 : this.customernumber.hashCode());
        result = prime * result + ((this.checknumber == null) ? 0 : this.checknumber.hashCode());
        result = prime * result + ((this.paymentdate == null) ? 0 : this.paymentdate.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Payments (");

        sb.append(customernumber);
        sb.append(", ").append(checknumber);
        sb.append(", ").append(paymentdate);
        sb.append(", ").append(amount);

        sb.append(")");
        return sb.toString();
    }
}
