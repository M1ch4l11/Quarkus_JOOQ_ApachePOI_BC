/*
 * This file is generated by jOOQ.
 */
package model.company.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Productlines implements Serializable {

    private static final long serialVersionUID = 1L;

    private String productline;
    private String textdescription;
    private String htmldescription;
    private byte[] image;

    public Productlines() {}

    public Productlines(Productlines value) {
        this.productline = value.productline;
        this.textdescription = value.textdescription;
        this.htmldescription = value.htmldescription;
        this.image = value.image;
    }

    public Productlines(
        String productline,
        String textdescription,
        String htmldescription,
        byte[] image
    ) {
        this.productline = productline;
        this.textdescription = textdescription;
        this.htmldescription = htmldescription;
        this.image = image;
    }

    /**
     * Getter for <code>company.productlines.productline</code>.
     */
    public String getProductline() {
        return this.productline;
    }

    /**
     * Setter for <code>company.productlines.productline</code>.
     */
    public void setProductline(String productline) {
        this.productline = productline;
    }

    /**
     * Getter for <code>company.productlines.textdescription</code>.
     */
    public String getTextdescription() {
        return this.textdescription;
    }

    /**
     * Setter for <code>company.productlines.textdescription</code>.
     */
    public void setTextdescription(String textdescription) {
        this.textdescription = textdescription;
    }

    /**
     * Getter for <code>company.productlines.htmldescription</code>.
     */
    public String getHtmldescription() {
        return this.htmldescription;
    }

    /**
     * Setter for <code>company.productlines.htmldescription</code>.
     */
    public void setHtmldescription(String htmldescription) {
        this.htmldescription = htmldescription;
    }

    /**
     * Getter for <code>company.productlines.image</code>.
     */
    public byte[] getImage() {
        return this.image;
    }

    /**
     * Setter for <code>company.productlines.image</code>.
     */
    public void setImage(byte[] image) {
        this.image = image;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Productlines other = (Productlines) obj;
        if (this.productline == null) {
            if (other.productline != null)
                return false;
        }
        else if (!this.productline.equals(other.productline))
            return false;
        if (this.textdescription == null) {
            if (other.textdescription != null)
                return false;
        }
        else if (!this.textdescription.equals(other.textdescription))
            return false;
        if (this.htmldescription == null) {
            if (other.htmldescription != null)
                return false;
        }
        else if (!this.htmldescription.equals(other.htmldescription))
            return false;
        if (this.image == null) {
            if (other.image != null)
                return false;
        }
        else if (!Arrays.equals(this.image, other.image))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.productline == null) ? 0 : this.productline.hashCode());
        result = prime * result + ((this.textdescription == null) ? 0 : this.textdescription.hashCode());
        result = prime * result + ((this.htmldescription == null) ? 0 : this.htmldescription.hashCode());
        result = prime * result + ((this.image == null) ? 0 : Arrays.hashCode(this.image));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Productlines (");

        sb.append(productline);
        sb.append(", ").append(textdescription);
        sb.append(", ").append(htmldescription);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
