/*
 * This file is generated by jOOQ.
 */
package model.company.tables.records;


import model.company.tables.Offices;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfficesRecord extends UpdatableRecordImpl<OfficesRecord> implements Record9<String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>company.offices.officecode</code>.
     */
    public void setOfficecode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>company.offices.officecode</code>.
     */
    public String getOfficecode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>company.offices.city</code>.
     */
    public void setCity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>company.offices.city</code>.
     */
    public String getCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>company.offices.phone</code>.
     */
    public void setPhone(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>company.offices.phone</code>.
     */
    public String getPhone() {
        return (String) get(2);
    }

    /**
     * Setter for <code>company.offices.addressline1</code>.
     */
    public void setAddressline1(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>company.offices.addressline1</code>.
     */
    public String getAddressline1() {
        return (String) get(3);
    }

    /**
     * Setter for <code>company.offices.addressline2</code>.
     */
    public void setAddressline2(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>company.offices.addressline2</code>.
     */
    public String getAddressline2() {
        return (String) get(4);
    }

    /**
     * Setter for <code>company.offices.state</code>.
     */
    public void setState(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>company.offices.state</code>.
     */
    public String getState() {
        return (String) get(5);
    }

    /**
     * Setter for <code>company.offices.country</code>.
     */
    public void setCountry(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>company.offices.country</code>.
     */
    public String getCountry() {
        return (String) get(6);
    }

    /**
     * Setter for <code>company.offices.postalcode</code>.
     */
    public void setPostalcode(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>company.offices.postalcode</code>.
     */
    public String getPostalcode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>company.offices.territory</code>.
     */
    public void setTerritory(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>company.offices.territory</code>.
     */
    public String getTerritory() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Offices.OFFICES.OFFICECODE;
    }

    @Override
    public Field<String> field2() {
        return Offices.OFFICES.CITY;
    }

    @Override
    public Field<String> field3() {
        return Offices.OFFICES.PHONE;
    }

    @Override
    public Field<String> field4() {
        return Offices.OFFICES.ADDRESSLINE1;
    }

    @Override
    public Field<String> field5() {
        return Offices.OFFICES.ADDRESSLINE2;
    }

    @Override
    public Field<String> field6() {
        return Offices.OFFICES.STATE;
    }

    @Override
    public Field<String> field7() {
        return Offices.OFFICES.COUNTRY;
    }

    @Override
    public Field<String> field8() {
        return Offices.OFFICES.POSTALCODE;
    }

    @Override
    public Field<String> field9() {
        return Offices.OFFICES.TERRITORY;
    }

    @Override
    public String component1() {
        return getOfficecode();
    }

    @Override
    public String component2() {
        return getCity();
    }

    @Override
    public String component3() {
        return getPhone();
    }

    @Override
    public String component4() {
        return getAddressline1();
    }

    @Override
    public String component5() {
        return getAddressline2();
    }

    @Override
    public String component6() {
        return getState();
    }

    @Override
    public String component7() {
        return getCountry();
    }

    @Override
    public String component8() {
        return getPostalcode();
    }

    @Override
    public String component9() {
        return getTerritory();
    }

    @Override
    public String value1() {
        return getOfficecode();
    }

    @Override
    public String value2() {
        return getCity();
    }

    @Override
    public String value3() {
        return getPhone();
    }

    @Override
    public String value4() {
        return getAddressline1();
    }

    @Override
    public String value5() {
        return getAddressline2();
    }

    @Override
    public String value6() {
        return getState();
    }

    @Override
    public String value7() {
        return getCountry();
    }

    @Override
    public String value8() {
        return getPostalcode();
    }

    @Override
    public String value9() {
        return getTerritory();
    }

    @Override
    public OfficesRecord value1(String value) {
        setOfficecode(value);
        return this;
    }

    @Override
    public OfficesRecord value2(String value) {
        setCity(value);
        return this;
    }

    @Override
    public OfficesRecord value3(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public OfficesRecord value4(String value) {
        setAddressline1(value);
        return this;
    }

    @Override
    public OfficesRecord value5(String value) {
        setAddressline2(value);
        return this;
    }

    @Override
    public OfficesRecord value6(String value) {
        setState(value);
        return this;
    }

    @Override
    public OfficesRecord value7(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public OfficesRecord value8(String value) {
        setPostalcode(value);
        return this;
    }

    @Override
    public OfficesRecord value9(String value) {
        setTerritory(value);
        return this;
    }

    @Override
    public OfficesRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OfficesRecord
     */
    public OfficesRecord() {
        super(Offices.OFFICES);
    }

    /**
     * Create a detached, initialised OfficesRecord
     */
    public OfficesRecord(String officecode, String city, String phone, String addressline1, String addressline2, String state, String country, String postalcode, String territory) {
        super(Offices.OFFICES);

        setOfficecode(officecode);
        setCity(city);
        setPhone(phone);
        setAddressline1(addressline1);
        setAddressline2(addressline2);
        setState(state);
        setCountry(country);
        setPostalcode(postalcode);
        setTerritory(territory);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OfficesRecord
     */
    public OfficesRecord(model.company.tables.pojos.Offices value) {
        super(Offices.OFFICES);

        if (value != null) {
            setOfficecode(value.getOfficecode());
            setCity(value.getCity());
            setPhone(value.getPhone());
            setAddressline1(value.getAddressline1());
            setAddressline2(value.getAddressline2());
            setState(value.getState());
            setCountry(value.getCountry());
            setPostalcode(value.getPostalcode());
            setTerritory(value.getTerritory());
            resetChangedOnNotNull();
        }
    }
}
