/*
 * This file is generated by jOOQ.
 */
package model.information_schema.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InformationSchemaCatalogName implements Serializable {

    private static final long serialVersionUID = 1L;

    private String catalogName;

    public InformationSchemaCatalogName() {}

    public InformationSchemaCatalogName(InformationSchemaCatalogName value) {
        this.catalogName = value.catalogName;
    }

    public InformationSchemaCatalogName(
        String catalogName
    ) {
        this.catalogName = catalogName;
    }

    /**
     * Getter for
     * <code>information_schema.information_schema_catalog_name.catalog_name</code>.
     */
    public String getCatalogName() {
        return this.catalogName;
    }

    /**
     * Setter for
     * <code>information_schema.information_schema_catalog_name.catalog_name</code>.
     */
    public void setCatalogName(String catalogName) {
        this.catalogName = catalogName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final InformationSchemaCatalogName other = (InformationSchemaCatalogName) obj;
        if (this.catalogName == null) {
            if (other.catalogName != null)
                return false;
        }
        else if (!this.catalogName.equals(other.catalogName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.catalogName == null) ? 0 : this.catalogName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InformationSchemaCatalogName (");

        sb.append(catalogName);

        sb.append(")");
        return sb.toString();
    }
}
