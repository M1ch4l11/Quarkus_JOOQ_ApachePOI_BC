/*
 * This file is generated by jOOQ.
 */
package model.information_schema.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Views implements Serializable {

    private static final long serialVersionUID = 1L;

    private String tableCatalog;
    private String tableSchema;
    private String tableName;
    private String viewDefinition;
    private String checkOption;
    private String isUpdatable;
    private String isInsertableInto;
    private String isTriggerUpdatable;
    private String isTriggerDeletable;
    private String isTriggerInsertableInto;

    public Views() {}

    public Views(Views value) {
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.viewDefinition = value.viewDefinition;
        this.checkOption = value.checkOption;
        this.isUpdatable = value.isUpdatable;
        this.isInsertableInto = value.isInsertableInto;
        this.isTriggerUpdatable = value.isTriggerUpdatable;
        this.isTriggerDeletable = value.isTriggerDeletable;
        this.isTriggerInsertableInto = value.isTriggerInsertableInto;
    }

    public Views(
        String tableCatalog,
        String tableSchema,
        String tableName,
        String viewDefinition,
        String checkOption,
        String isUpdatable,
        String isInsertableInto,
        String isTriggerUpdatable,
        String isTriggerDeletable,
        String isTriggerInsertableInto
    ) {
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.viewDefinition = viewDefinition;
        this.checkOption = checkOption;
        this.isUpdatable = isUpdatable;
        this.isInsertableInto = isInsertableInto;
        this.isTriggerUpdatable = isTriggerUpdatable;
        this.isTriggerDeletable = isTriggerDeletable;
        this.isTriggerInsertableInto = isTriggerInsertableInto;
    }

    /**
     * Getter for <code>information_schema.views.table_catalog</code>.
     */
    public String getTableCatalog() {
        return this.tableCatalog;
    }

    /**
     * Setter for <code>information_schema.views.table_catalog</code>.
     */
    public void setTableCatalog(String tableCatalog) {
        this.tableCatalog = tableCatalog;
    }

    /**
     * Getter for <code>information_schema.views.table_schema</code>.
     */
    public String getTableSchema() {
        return this.tableSchema;
    }

    /**
     * Setter for <code>information_schema.views.table_schema</code>.
     */
    public void setTableSchema(String tableSchema) {
        this.tableSchema = tableSchema;
    }

    /**
     * Getter for <code>information_schema.views.table_name</code>.
     */
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Setter for <code>information_schema.views.table_name</code>.
     */
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    /**
     * Getter for <code>information_schema.views.view_definition</code>.
     */
    public String getViewDefinition() {
        return this.viewDefinition;
    }

    /**
     * Setter for <code>information_schema.views.view_definition</code>.
     */
    public void setViewDefinition(String viewDefinition) {
        this.viewDefinition = viewDefinition;
    }

    /**
     * Getter for <code>information_schema.views.check_option</code>.
     */
    public String getCheckOption() {
        return this.checkOption;
    }

    /**
     * Setter for <code>information_schema.views.check_option</code>.
     */
    public void setCheckOption(String checkOption) {
        this.checkOption = checkOption;
    }

    /**
     * Getter for <code>information_schema.views.is_updatable</code>.
     */
    public String getIsUpdatable() {
        return this.isUpdatable;
    }

    /**
     * Setter for <code>information_schema.views.is_updatable</code>.
     */
    public void setIsUpdatable(String isUpdatable) {
        this.isUpdatable = isUpdatable;
    }

    /**
     * Getter for <code>information_schema.views.is_insertable_into</code>.
     */
    public String getIsInsertableInto() {
        return this.isInsertableInto;
    }

    /**
     * Setter for <code>information_schema.views.is_insertable_into</code>.
     */
    public void setIsInsertableInto(String isInsertableInto) {
        this.isInsertableInto = isInsertableInto;
    }

    /**
     * Getter for <code>information_schema.views.is_trigger_updatable</code>.
     */
    public String getIsTriggerUpdatable() {
        return this.isTriggerUpdatable;
    }

    /**
     * Setter for <code>information_schema.views.is_trigger_updatable</code>.
     */
    public void setIsTriggerUpdatable(String isTriggerUpdatable) {
        this.isTriggerUpdatable = isTriggerUpdatable;
    }

    /**
     * Getter for <code>information_schema.views.is_trigger_deletable</code>.
     */
    public String getIsTriggerDeletable() {
        return this.isTriggerDeletable;
    }

    /**
     * Setter for <code>information_schema.views.is_trigger_deletable</code>.
     */
    public void setIsTriggerDeletable(String isTriggerDeletable) {
        this.isTriggerDeletable = isTriggerDeletable;
    }

    /**
     * Getter for
     * <code>information_schema.views.is_trigger_insertable_into</code>.
     */
    public String getIsTriggerInsertableInto() {
        return this.isTriggerInsertableInto;
    }

    /**
     * Setter for
     * <code>information_schema.views.is_trigger_insertable_into</code>.
     */
    public void setIsTriggerInsertableInto(String isTriggerInsertableInto) {
        this.isTriggerInsertableInto = isTriggerInsertableInto;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Views other = (Views) obj;
        if (this.tableCatalog == null) {
            if (other.tableCatalog != null)
                return false;
        }
        else if (!this.tableCatalog.equals(other.tableCatalog))
            return false;
        if (this.tableSchema == null) {
            if (other.tableSchema != null)
                return false;
        }
        else if (!this.tableSchema.equals(other.tableSchema))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.viewDefinition == null) {
            if (other.viewDefinition != null)
                return false;
        }
        else if (!this.viewDefinition.equals(other.viewDefinition))
            return false;
        if (this.checkOption == null) {
            if (other.checkOption != null)
                return false;
        }
        else if (!this.checkOption.equals(other.checkOption))
            return false;
        if (this.isUpdatable == null) {
            if (other.isUpdatable != null)
                return false;
        }
        else if (!this.isUpdatable.equals(other.isUpdatable))
            return false;
        if (this.isInsertableInto == null) {
            if (other.isInsertableInto != null)
                return false;
        }
        else if (!this.isInsertableInto.equals(other.isInsertableInto))
            return false;
        if (this.isTriggerUpdatable == null) {
            if (other.isTriggerUpdatable != null)
                return false;
        }
        else if (!this.isTriggerUpdatable.equals(other.isTriggerUpdatable))
            return false;
        if (this.isTriggerDeletable == null) {
            if (other.isTriggerDeletable != null)
                return false;
        }
        else if (!this.isTriggerDeletable.equals(other.isTriggerDeletable))
            return false;
        if (this.isTriggerInsertableInto == null) {
            if (other.isTriggerInsertableInto != null)
                return false;
        }
        else if (!this.isTriggerInsertableInto.equals(other.isTriggerInsertableInto))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tableCatalog == null) ? 0 : this.tableCatalog.hashCode());
        result = prime * result + ((this.tableSchema == null) ? 0 : this.tableSchema.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.viewDefinition == null) ? 0 : this.viewDefinition.hashCode());
        result = prime * result + ((this.checkOption == null) ? 0 : this.checkOption.hashCode());
        result = prime * result + ((this.isUpdatable == null) ? 0 : this.isUpdatable.hashCode());
        result = prime * result + ((this.isInsertableInto == null) ? 0 : this.isInsertableInto.hashCode());
        result = prime * result + ((this.isTriggerUpdatable == null) ? 0 : this.isTriggerUpdatable.hashCode());
        result = prime * result + ((this.isTriggerDeletable == null) ? 0 : this.isTriggerDeletable.hashCode());
        result = prime * result + ((this.isTriggerInsertableInto == null) ? 0 : this.isTriggerInsertableInto.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Views (");

        sb.append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(viewDefinition);
        sb.append(", ").append(checkOption);
        sb.append(", ").append(isUpdatable);
        sb.append(", ").append(isInsertableInto);
        sb.append(", ").append(isTriggerUpdatable);
        sb.append(", ").append(isTriggerDeletable);
        sb.append(", ").append(isTriggerInsertableInto);

        sb.append(")");
        return sb.toString();
    }
}
