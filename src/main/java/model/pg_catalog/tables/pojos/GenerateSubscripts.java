/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GenerateSubscripts implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer generateSubscripts;

    public GenerateSubscripts() {}

    public GenerateSubscripts(GenerateSubscripts value) {
        this.generateSubscripts = value.generateSubscripts;
    }

    public GenerateSubscripts(
        Integer generateSubscripts
    ) {
        this.generateSubscripts = generateSubscripts;
    }

    /**
     * Getter for
     * <code>pg_catalog.generate_subscripts.generate_subscripts</code>.
     */
    public Integer getGenerateSubscripts() {
        return this.generateSubscripts;
    }

    /**
     * Setter for
     * <code>pg_catalog.generate_subscripts.generate_subscripts</code>.
     */
    public void setGenerateSubscripts(Integer generateSubscripts) {
        this.generateSubscripts = generateSubscripts;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final GenerateSubscripts other = (GenerateSubscripts) obj;
        if (this.generateSubscripts == null) {
            if (other.generateSubscripts != null)
                return false;
        }
        else if (!this.generateSubscripts.equals(other.generateSubscripts))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.generateSubscripts == null) ? 0 : this.generateSubscripts.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GenerateSubscripts (");

        sb.append(generateSubscripts);

        sb.append(")");
        return sb.toString();
    }
}
