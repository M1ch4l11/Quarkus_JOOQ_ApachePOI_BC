/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmop implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long oid;
    private Long amopfamily;
    private Long amoplefttype;
    private Long amoprighttype;
    private Short amopstrategy;
    private String amoppurpose;
    private Long amopopr;
    private Long amopmethod;
    private Long amopsortfamily;

    public PgAmop() {}

    public PgAmop(PgAmop value) {
        this.oid = value.oid;
        this.amopfamily = value.amopfamily;
        this.amoplefttype = value.amoplefttype;
        this.amoprighttype = value.amoprighttype;
        this.amopstrategy = value.amopstrategy;
        this.amoppurpose = value.amoppurpose;
        this.amopopr = value.amopopr;
        this.amopmethod = value.amopmethod;
        this.amopsortfamily = value.amopsortfamily;
    }

    public PgAmop(
        Long oid,
        Long amopfamily,
        Long amoplefttype,
        Long amoprighttype,
        Short amopstrategy,
        String amoppurpose,
        Long amopopr,
        Long amopmethod,
        Long amopsortfamily
    ) {
        this.oid = oid;
        this.amopfamily = amopfamily;
        this.amoplefttype = amoplefttype;
        this.amoprighttype = amoprighttype;
        this.amopstrategy = amopstrategy;
        this.amoppurpose = amoppurpose;
        this.amopopr = amopopr;
        this.amopmethod = amopmethod;
        this.amopsortfamily = amopsortfamily;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.oid</code>.
     */
    public Long getOid() {
        return this.oid;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.oid</code>.
     */
    public void setOid(Long oid) {
        this.oid = oid;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopfamily</code>.
     */
    public Long getAmopfamily() {
        return this.amopfamily;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopfamily</code>.
     */
    public void setAmopfamily(Long amopfamily) {
        this.amopfamily = amopfamily;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoplefttype</code>.
     */
    public Long getAmoplefttype() {
        return this.amoplefttype;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoplefttype</code>.
     */
    public void setAmoplefttype(Long amoplefttype) {
        this.amoplefttype = amoplefttype;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoprighttype</code>.
     */
    public Long getAmoprighttype() {
        return this.amoprighttype;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoprighttype</code>.
     */
    public void setAmoprighttype(Long amoprighttype) {
        this.amoprighttype = amoprighttype;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopstrategy</code>.
     */
    public Short getAmopstrategy() {
        return this.amopstrategy;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopstrategy</code>.
     */
    public void setAmopstrategy(Short amopstrategy) {
        this.amopstrategy = amopstrategy;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amoppurpose</code>.
     */
    public String getAmoppurpose() {
        return this.amoppurpose;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amoppurpose</code>.
     */
    public void setAmoppurpose(String amoppurpose) {
        this.amoppurpose = amoppurpose;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopopr</code>.
     */
    public Long getAmopopr() {
        return this.amopopr;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopopr</code>.
     */
    public void setAmopopr(Long amopopr) {
        this.amopopr = amopopr;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopmethod</code>.
     */
    public Long getAmopmethod() {
        return this.amopmethod;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopmethod</code>.
     */
    public void setAmopmethod(Long amopmethod) {
        this.amopmethod = amopmethod;
    }

    /**
     * Getter for <code>pg_catalog.pg_amop.amopsortfamily</code>.
     */
    public Long getAmopsortfamily() {
        return this.amopsortfamily;
    }

    /**
     * Setter for <code>pg_catalog.pg_amop.amopsortfamily</code>.
     */
    public void setAmopsortfamily(Long amopsortfamily) {
        this.amopsortfamily = amopsortfamily;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgAmop other = (PgAmop) obj;
        if (this.oid == null) {
            if (other.oid != null)
                return false;
        }
        else if (!this.oid.equals(other.oid))
            return false;
        if (this.amopfamily == null) {
            if (other.amopfamily != null)
                return false;
        }
        else if (!this.amopfamily.equals(other.amopfamily))
            return false;
        if (this.amoplefttype == null) {
            if (other.amoplefttype != null)
                return false;
        }
        else if (!this.amoplefttype.equals(other.amoplefttype))
            return false;
        if (this.amoprighttype == null) {
            if (other.amoprighttype != null)
                return false;
        }
        else if (!this.amoprighttype.equals(other.amoprighttype))
            return false;
        if (this.amopstrategy == null) {
            if (other.amopstrategy != null)
                return false;
        }
        else if (!this.amopstrategy.equals(other.amopstrategy))
            return false;
        if (this.amoppurpose == null) {
            if (other.amoppurpose != null)
                return false;
        }
        else if (!this.amoppurpose.equals(other.amoppurpose))
            return false;
        if (this.amopopr == null) {
            if (other.amopopr != null)
                return false;
        }
        else if (!this.amopopr.equals(other.amopopr))
            return false;
        if (this.amopmethod == null) {
            if (other.amopmethod != null)
                return false;
        }
        else if (!this.amopmethod.equals(other.amopmethod))
            return false;
        if (this.amopsortfamily == null) {
            if (other.amopsortfamily != null)
                return false;
        }
        else if (!this.amopsortfamily.equals(other.amopsortfamily))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.oid == null) ? 0 : this.oid.hashCode());
        result = prime * result + ((this.amopfamily == null) ? 0 : this.amopfamily.hashCode());
        result = prime * result + ((this.amoplefttype == null) ? 0 : this.amoplefttype.hashCode());
        result = prime * result + ((this.amoprighttype == null) ? 0 : this.amoprighttype.hashCode());
        result = prime * result + ((this.amopstrategy == null) ? 0 : this.amopstrategy.hashCode());
        result = prime * result + ((this.amoppurpose == null) ? 0 : this.amoppurpose.hashCode());
        result = prime * result + ((this.amopopr == null) ? 0 : this.amopopr.hashCode());
        result = prime * result + ((this.amopmethod == null) ? 0 : this.amopmethod.hashCode());
        result = prime * result + ((this.amopsortfamily == null) ? 0 : this.amopsortfamily.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgAmop (");

        sb.append(oid);
        sb.append(", ").append(amopfamily);
        sb.append(", ").append(amoplefttype);
        sb.append(", ").append(amoprighttype);
        sb.append(", ").append(amopstrategy);
        sb.append(", ").append(amoppurpose);
        sb.append(", ").append(amopopr);
        sb.append(", ").append(amopmethod);
        sb.append(", ").append(amopsortfamily);

        sb.append(")");
        return sb.toString();
    }
}
