/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgDatabase implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long oid;
    private String datname;
    private Long datdba;
    private Integer encoding;
    private String datcollate;
    private String datctype;
    private Boolean datistemplate;
    private Boolean datallowconn;
    private Integer datconnlimit;
    private Long datlastsysoid;
    private Long datfrozenxid;
    private Long datminmxid;
    private Long dattablespace;
    private String[] datacl;

    public PgDatabase() {}

    public PgDatabase(PgDatabase value) {
        this.oid = value.oid;
        this.datname = value.datname;
        this.datdba = value.datdba;
        this.encoding = value.encoding;
        this.datcollate = value.datcollate;
        this.datctype = value.datctype;
        this.datistemplate = value.datistemplate;
        this.datallowconn = value.datallowconn;
        this.datconnlimit = value.datconnlimit;
        this.datlastsysoid = value.datlastsysoid;
        this.datfrozenxid = value.datfrozenxid;
        this.datminmxid = value.datminmxid;
        this.dattablespace = value.dattablespace;
        this.datacl = value.datacl;
    }

    public PgDatabase(
        Long oid,
        String datname,
        Long datdba,
        Integer encoding,
        String datcollate,
        String datctype,
        Boolean datistemplate,
        Boolean datallowconn,
        Integer datconnlimit,
        Long datlastsysoid,
        Long datfrozenxid,
        Long datminmxid,
        Long dattablespace,
        String[] datacl
    ) {
        this.oid = oid;
        this.datname = datname;
        this.datdba = datdba;
        this.encoding = encoding;
        this.datcollate = datcollate;
        this.datctype = datctype;
        this.datistemplate = datistemplate;
        this.datallowconn = datallowconn;
        this.datconnlimit = datconnlimit;
        this.datlastsysoid = datlastsysoid;
        this.datfrozenxid = datfrozenxid;
        this.datminmxid = datminmxid;
        this.dattablespace = dattablespace;
        this.datacl = datacl;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.oid</code>.
     */
    public Long getOid() {
        return this.oid;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.oid</code>.
     */
    public void setOid(Long oid) {
        this.oid = oid;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datname</code>.
     */
    public String getDatname() {
        return this.datname;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datname</code>.
     */
    public void setDatname(String datname) {
        this.datname = datname;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datdba</code>.
     */
    public Long getDatdba() {
        return this.datdba;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datdba</code>.
     */
    public void setDatdba(Long datdba) {
        this.datdba = datdba;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.encoding</code>.
     */
    public Integer getEncoding() {
        return this.encoding;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.encoding</code>.
     */
    public void setEncoding(Integer encoding) {
        this.encoding = encoding;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datcollate</code>.
     */
    public String getDatcollate() {
        return this.datcollate;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datcollate</code>.
     */
    public void setDatcollate(String datcollate) {
        this.datcollate = datcollate;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datctype</code>.
     */
    public String getDatctype() {
        return this.datctype;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datctype</code>.
     */
    public void setDatctype(String datctype) {
        this.datctype = datctype;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datistemplate</code>.
     */
    public Boolean getDatistemplate() {
        return this.datistemplate;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datistemplate</code>.
     */
    public void setDatistemplate(Boolean datistemplate) {
        this.datistemplate = datistemplate;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datallowconn</code>.
     */
    public Boolean getDatallowconn() {
        return this.datallowconn;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datallowconn</code>.
     */
    public void setDatallowconn(Boolean datallowconn) {
        this.datallowconn = datallowconn;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datconnlimit</code>.
     */
    public Integer getDatconnlimit() {
        return this.datconnlimit;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datconnlimit</code>.
     */
    public void setDatconnlimit(Integer datconnlimit) {
        this.datconnlimit = datconnlimit;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datlastsysoid</code>.
     */
    public Long getDatlastsysoid() {
        return this.datlastsysoid;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datlastsysoid</code>.
     */
    public void setDatlastsysoid(Long datlastsysoid) {
        this.datlastsysoid = datlastsysoid;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datfrozenxid</code>.
     */
    public Long getDatfrozenxid() {
        return this.datfrozenxid;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datfrozenxid</code>.
     */
    public void setDatfrozenxid(Long datfrozenxid) {
        this.datfrozenxid = datfrozenxid;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datminmxid</code>.
     */
    public Long getDatminmxid() {
        return this.datminmxid;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datminmxid</code>.
     */
    public void setDatminmxid(Long datminmxid) {
        this.datminmxid = datminmxid;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.dattablespace</code>.
     */
    public Long getDattablespace() {
        return this.dattablespace;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.dattablespace</code>.
     */
    public void setDattablespace(Long dattablespace) {
        this.dattablespace = dattablespace;
    }

    /**
     * Getter for <code>pg_catalog.pg_database.datacl</code>.
     */
    public String[] getDatacl() {
        return this.datacl;
    }

    /**
     * Setter for <code>pg_catalog.pg_database.datacl</code>.
     */
    public void setDatacl(String[] datacl) {
        this.datacl = datacl;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgDatabase other = (PgDatabase) obj;
        if (this.oid == null) {
            if (other.oid != null)
                return false;
        }
        else if (!this.oid.equals(other.oid))
            return false;
        if (this.datname == null) {
            if (other.datname != null)
                return false;
        }
        else if (!this.datname.equals(other.datname))
            return false;
        if (this.datdba == null) {
            if (other.datdba != null)
                return false;
        }
        else if (!this.datdba.equals(other.datdba))
            return false;
        if (this.encoding == null) {
            if (other.encoding != null)
                return false;
        }
        else if (!this.encoding.equals(other.encoding))
            return false;
        if (this.datcollate == null) {
            if (other.datcollate != null)
                return false;
        }
        else if (!this.datcollate.equals(other.datcollate))
            return false;
        if (this.datctype == null) {
            if (other.datctype != null)
                return false;
        }
        else if (!this.datctype.equals(other.datctype))
            return false;
        if (this.datistemplate == null) {
            if (other.datistemplate != null)
                return false;
        }
        else if (!this.datistemplate.equals(other.datistemplate))
            return false;
        if (this.datallowconn == null) {
            if (other.datallowconn != null)
                return false;
        }
        else if (!this.datallowconn.equals(other.datallowconn))
            return false;
        if (this.datconnlimit == null) {
            if (other.datconnlimit != null)
                return false;
        }
        else if (!this.datconnlimit.equals(other.datconnlimit))
            return false;
        if (this.datlastsysoid == null) {
            if (other.datlastsysoid != null)
                return false;
        }
        else if (!this.datlastsysoid.equals(other.datlastsysoid))
            return false;
        if (this.datfrozenxid == null) {
            if (other.datfrozenxid != null)
                return false;
        }
        else if (!this.datfrozenxid.equals(other.datfrozenxid))
            return false;
        if (this.datminmxid == null) {
            if (other.datminmxid != null)
                return false;
        }
        else if (!this.datminmxid.equals(other.datminmxid))
            return false;
        if (this.dattablespace == null) {
            if (other.dattablespace != null)
                return false;
        }
        else if (!this.dattablespace.equals(other.dattablespace))
            return false;
        if (this.datacl == null) {
            if (other.datacl != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.datacl, other.datacl))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.oid == null) ? 0 : this.oid.hashCode());
        result = prime * result + ((this.datname == null) ? 0 : this.datname.hashCode());
        result = prime * result + ((this.datdba == null) ? 0 : this.datdba.hashCode());
        result = prime * result + ((this.encoding == null) ? 0 : this.encoding.hashCode());
        result = prime * result + ((this.datcollate == null) ? 0 : this.datcollate.hashCode());
        result = prime * result + ((this.datctype == null) ? 0 : this.datctype.hashCode());
        result = prime * result + ((this.datistemplate == null) ? 0 : this.datistemplate.hashCode());
        result = prime * result + ((this.datallowconn == null) ? 0 : this.datallowconn.hashCode());
        result = prime * result + ((this.datconnlimit == null) ? 0 : this.datconnlimit.hashCode());
        result = prime * result + ((this.datlastsysoid == null) ? 0 : this.datlastsysoid.hashCode());
        result = prime * result + ((this.datfrozenxid == null) ? 0 : this.datfrozenxid.hashCode());
        result = prime * result + ((this.datminmxid == null) ? 0 : this.datminmxid.hashCode());
        result = prime * result + ((this.dattablespace == null) ? 0 : this.dattablespace.hashCode());
        result = prime * result + ((this.datacl == null) ? 0 : Arrays.deepHashCode(this.datacl));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgDatabase (");

        sb.append(oid);
        sb.append(", ").append(datname);
        sb.append(", ").append(datdba);
        sb.append(", ").append(encoding);
        sb.append(", ").append(datcollate);
        sb.append(", ").append(datctype);
        sb.append(", ").append(datistemplate);
        sb.append(", ").append(datallowconn);
        sb.append(", ").append(datconnlimit);
        sb.append(", ").append(datlastsysoid);
        sb.append(", ").append(datfrozenxid);
        sb.append(", ").append(datminmxid);
        sb.append(", ").append(dattablespace);
        sb.append(", ").append(Arrays.deepToString(datacl));

        sb.append(")");
        return sb.toString();
    }
}
