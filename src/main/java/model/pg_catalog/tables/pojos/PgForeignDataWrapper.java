/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgForeignDataWrapper implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long oid;
    private String fdwname;
    private Long fdwowner;
    private Long fdwhandler;
    private Long fdwvalidator;
    private String[] fdwacl;
    private String[] fdwoptions;

    public PgForeignDataWrapper() {}

    public PgForeignDataWrapper(PgForeignDataWrapper value) {
        this.oid = value.oid;
        this.fdwname = value.fdwname;
        this.fdwowner = value.fdwowner;
        this.fdwhandler = value.fdwhandler;
        this.fdwvalidator = value.fdwvalidator;
        this.fdwacl = value.fdwacl;
        this.fdwoptions = value.fdwoptions;
    }

    public PgForeignDataWrapper(
        Long oid,
        String fdwname,
        Long fdwowner,
        Long fdwhandler,
        Long fdwvalidator,
        String[] fdwacl,
        String[] fdwoptions
    ) {
        this.oid = oid;
        this.fdwname = fdwname;
        this.fdwowner = fdwowner;
        this.fdwhandler = fdwhandler;
        this.fdwvalidator = fdwvalidator;
        this.fdwacl = fdwacl;
        this.fdwoptions = fdwoptions;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.oid</code>.
     */
    public Long getOid() {
        return this.oid;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.oid</code>.
     */
    public void setOid(Long oid) {
        this.oid = oid;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.fdwname</code>.
     */
    public String getFdwname() {
        return this.fdwname;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.fdwname</code>.
     */
    public void setFdwname(String fdwname) {
        this.fdwname = fdwname;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.fdwowner</code>.
     */
    public Long getFdwowner() {
        return this.fdwowner;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.fdwowner</code>.
     */
    public void setFdwowner(Long fdwowner) {
        this.fdwowner = fdwowner;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.fdwhandler</code>.
     */
    public Long getFdwhandler() {
        return this.fdwhandler;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.fdwhandler</code>.
     */
    public void setFdwhandler(Long fdwhandler) {
        this.fdwhandler = fdwhandler;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.fdwvalidator</code>.
     */
    public Long getFdwvalidator() {
        return this.fdwvalidator;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.fdwvalidator</code>.
     */
    public void setFdwvalidator(Long fdwvalidator) {
        this.fdwvalidator = fdwvalidator;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.fdwacl</code>.
     */
    public String[] getFdwacl() {
        return this.fdwacl;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.fdwacl</code>.
     */
    public void setFdwacl(String[] fdwacl) {
        this.fdwacl = fdwacl;
    }

    /**
     * Getter for <code>pg_catalog.pg_foreign_data_wrapper.fdwoptions</code>.
     */
    public String[] getFdwoptions() {
        return this.fdwoptions;
    }

    /**
     * Setter for <code>pg_catalog.pg_foreign_data_wrapper.fdwoptions</code>.
     */
    public void setFdwoptions(String[] fdwoptions) {
        this.fdwoptions = fdwoptions;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgForeignDataWrapper other = (PgForeignDataWrapper) obj;
        if (this.oid == null) {
            if (other.oid != null)
                return false;
        }
        else if (!this.oid.equals(other.oid))
            return false;
        if (this.fdwname == null) {
            if (other.fdwname != null)
                return false;
        }
        else if (!this.fdwname.equals(other.fdwname))
            return false;
        if (this.fdwowner == null) {
            if (other.fdwowner != null)
                return false;
        }
        else if (!this.fdwowner.equals(other.fdwowner))
            return false;
        if (this.fdwhandler == null) {
            if (other.fdwhandler != null)
                return false;
        }
        else if (!this.fdwhandler.equals(other.fdwhandler))
            return false;
        if (this.fdwvalidator == null) {
            if (other.fdwvalidator != null)
                return false;
        }
        else if (!this.fdwvalidator.equals(other.fdwvalidator))
            return false;
        if (this.fdwacl == null) {
            if (other.fdwacl != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.fdwacl, other.fdwacl))
            return false;
        if (this.fdwoptions == null) {
            if (other.fdwoptions != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.fdwoptions, other.fdwoptions))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.oid == null) ? 0 : this.oid.hashCode());
        result = prime * result + ((this.fdwname == null) ? 0 : this.fdwname.hashCode());
        result = prime * result + ((this.fdwowner == null) ? 0 : this.fdwowner.hashCode());
        result = prime * result + ((this.fdwhandler == null) ? 0 : this.fdwhandler.hashCode());
        result = prime * result + ((this.fdwvalidator == null) ? 0 : this.fdwvalidator.hashCode());
        result = prime * result + ((this.fdwacl == null) ? 0 : Arrays.deepHashCode(this.fdwacl));
        result = prime * result + ((this.fdwoptions == null) ? 0 : Arrays.deepHashCode(this.fdwoptions));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgForeignDataWrapper (");

        sb.append(oid);
        sb.append(", ").append(fdwname);
        sb.append(", ").append(fdwowner);
        sb.append(", ").append(fdwhandler);
        sb.append(", ").append(fdwvalidator);
        sb.append(", ").append(Arrays.deepToString(fdwacl));
        sb.append(", ").append(Arrays.deepToString(fdwoptions));

        sb.append(")");
        return sb.toString();
    }
}
