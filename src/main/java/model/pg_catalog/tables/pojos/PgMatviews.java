/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgMatviews implements Serializable {

    private static final long serialVersionUID = 1L;

    private String schemaname;
    private String matviewname;
    private String matviewowner;
    private String tablespace;
    private Boolean hasindexes;
    private Boolean ispopulated;
    private String definition;

    public PgMatviews() {}

    public PgMatviews(PgMatviews value) {
        this.schemaname = value.schemaname;
        this.matviewname = value.matviewname;
        this.matviewowner = value.matviewowner;
        this.tablespace = value.tablespace;
        this.hasindexes = value.hasindexes;
        this.ispopulated = value.ispopulated;
        this.definition = value.definition;
    }

    public PgMatviews(
        String schemaname,
        String matviewname,
        String matviewowner,
        String tablespace,
        Boolean hasindexes,
        Boolean ispopulated,
        String definition
    ) {
        this.schemaname = schemaname;
        this.matviewname = matviewname;
        this.matviewowner = matviewowner;
        this.tablespace = tablespace;
        this.hasindexes = hasindexes;
        this.ispopulated = ispopulated;
        this.definition = definition;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.schemaname</code>.
     */
    public String getSchemaname() {
        return this.schemaname;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.schemaname</code>.
     */
    public void setSchemaname(String schemaname) {
        this.schemaname = schemaname;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.matviewname</code>.
     */
    public String getMatviewname() {
        return this.matviewname;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.matviewname</code>.
     */
    public void setMatviewname(String matviewname) {
        this.matviewname = matviewname;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.matviewowner</code>.
     */
    public String getMatviewowner() {
        return this.matviewowner;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.matviewowner</code>.
     */
    public void setMatviewowner(String matviewowner) {
        this.matviewowner = matviewowner;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.tablespace</code>.
     */
    public String getTablespace() {
        return this.tablespace;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.tablespace</code>.
     */
    public void setTablespace(String tablespace) {
        this.tablespace = tablespace;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.hasindexes</code>.
     */
    public Boolean getHasindexes() {
        return this.hasindexes;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.hasindexes</code>.
     */
    public void setHasindexes(Boolean hasindexes) {
        this.hasindexes = hasindexes;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.ispopulated</code>.
     */
    public Boolean getIspopulated() {
        return this.ispopulated;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.ispopulated</code>.
     */
    public void setIspopulated(Boolean ispopulated) {
        this.ispopulated = ispopulated;
    }

    /**
     * Getter for <code>pg_catalog.pg_matviews.definition</code>.
     */
    public String getDefinition() {
        return this.definition;
    }

    /**
     * Setter for <code>pg_catalog.pg_matviews.definition</code>.
     */
    public void setDefinition(String definition) {
        this.definition = definition;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgMatviews other = (PgMatviews) obj;
        if (this.schemaname == null) {
            if (other.schemaname != null)
                return false;
        }
        else if (!this.schemaname.equals(other.schemaname))
            return false;
        if (this.matviewname == null) {
            if (other.matviewname != null)
                return false;
        }
        else if (!this.matviewname.equals(other.matviewname))
            return false;
        if (this.matviewowner == null) {
            if (other.matviewowner != null)
                return false;
        }
        else if (!this.matviewowner.equals(other.matviewowner))
            return false;
        if (this.tablespace == null) {
            if (other.tablespace != null)
                return false;
        }
        else if (!this.tablespace.equals(other.tablespace))
            return false;
        if (this.hasindexes == null) {
            if (other.hasindexes != null)
                return false;
        }
        else if (!this.hasindexes.equals(other.hasindexes))
            return false;
        if (this.ispopulated == null) {
            if (other.ispopulated != null)
                return false;
        }
        else if (!this.ispopulated.equals(other.ispopulated))
            return false;
        if (this.definition == null) {
            if (other.definition != null)
                return false;
        }
        else if (!this.definition.equals(other.definition))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.schemaname == null) ? 0 : this.schemaname.hashCode());
        result = prime * result + ((this.matviewname == null) ? 0 : this.matviewname.hashCode());
        result = prime * result + ((this.matviewowner == null) ? 0 : this.matviewowner.hashCode());
        result = prime * result + ((this.tablespace == null) ? 0 : this.tablespace.hashCode());
        result = prime * result + ((this.hasindexes == null) ? 0 : this.hasindexes.hashCode());
        result = prime * result + ((this.ispopulated == null) ? 0 : this.ispopulated.hashCode());
        result = prime * result + ((this.definition == null) ? 0 : this.definition.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgMatviews (");

        sb.append(schemaname);
        sb.append(", ").append(matviewname);
        sb.append(", ").append(matviewowner);
        sb.append(", ").append(tablespace);
        sb.append(", ").append(hasindexes);
        sb.append(", ").append(ispopulated);
        sb.append(", ").append(definition);

        sb.append(")");
        return sb.toString();
    }
}
