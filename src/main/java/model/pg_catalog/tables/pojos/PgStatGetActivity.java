/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgStatGetActivity implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long datid;
    private Integer pid;
    private Long usesysid;
    private String applicationName;
    private String state;
    private String query;
    private String waitEventType;
    private String waitEvent;
    private OffsetDateTime xactStart;
    private OffsetDateTime queryStart;
    private OffsetDateTime backendStart;
    private OffsetDateTime stateChange;
    private Object clientAddr;
    private String clientHostname;
    private Integer clientPort;
    private Long backendXid;
    private Long backendXmin;
    private String backendType;
    private Boolean ssl;
    private String sslversion;
    private String sslcipher;
    private Integer sslbits;
    private String sslClientDn;
    private BigDecimal sslClientSerial;
    private String sslIssuerDn;
    private Boolean gssAuth;
    private String gssPrinc;
    private Boolean gssEnc;
    private Integer leaderPid;
    private Long queryId;

    public PgStatGetActivity() {}

    public PgStatGetActivity(PgStatGetActivity value) {
        this.datid = value.datid;
        this.pid = value.pid;
        this.usesysid = value.usesysid;
        this.applicationName = value.applicationName;
        this.state = value.state;
        this.query = value.query;
        this.waitEventType = value.waitEventType;
        this.waitEvent = value.waitEvent;
        this.xactStart = value.xactStart;
        this.queryStart = value.queryStart;
        this.backendStart = value.backendStart;
        this.stateChange = value.stateChange;
        this.clientAddr = value.clientAddr;
        this.clientHostname = value.clientHostname;
        this.clientPort = value.clientPort;
        this.backendXid = value.backendXid;
        this.backendXmin = value.backendXmin;
        this.backendType = value.backendType;
        this.ssl = value.ssl;
        this.sslversion = value.sslversion;
        this.sslcipher = value.sslcipher;
        this.sslbits = value.sslbits;
        this.sslClientDn = value.sslClientDn;
        this.sslClientSerial = value.sslClientSerial;
        this.sslIssuerDn = value.sslIssuerDn;
        this.gssAuth = value.gssAuth;
        this.gssPrinc = value.gssPrinc;
        this.gssEnc = value.gssEnc;
        this.leaderPid = value.leaderPid;
        this.queryId = value.queryId;
    }

    public PgStatGetActivity(
        Long datid,
        Integer pid,
        Long usesysid,
        String applicationName,
        String state,
        String query,
        String waitEventType,
        String waitEvent,
        OffsetDateTime xactStart,
        OffsetDateTime queryStart,
        OffsetDateTime backendStart,
        OffsetDateTime stateChange,
        Object clientAddr,
        String clientHostname,
        Integer clientPort,
        Long backendXid,
        Long backendXmin,
        String backendType,
        Boolean ssl,
        String sslversion,
        String sslcipher,
        Integer sslbits,
        String sslClientDn,
        BigDecimal sslClientSerial,
        String sslIssuerDn,
        Boolean gssAuth,
        String gssPrinc,
        Boolean gssEnc,
        Integer leaderPid,
        Long queryId
    ) {
        this.datid = datid;
        this.pid = pid;
        this.usesysid = usesysid;
        this.applicationName = applicationName;
        this.state = state;
        this.query = query;
        this.waitEventType = waitEventType;
        this.waitEvent = waitEvent;
        this.xactStart = xactStart;
        this.queryStart = queryStart;
        this.backendStart = backendStart;
        this.stateChange = stateChange;
        this.clientAddr = clientAddr;
        this.clientHostname = clientHostname;
        this.clientPort = clientPort;
        this.backendXid = backendXid;
        this.backendXmin = backendXmin;
        this.backendType = backendType;
        this.ssl = ssl;
        this.sslversion = sslversion;
        this.sslcipher = sslcipher;
        this.sslbits = sslbits;
        this.sslClientDn = sslClientDn;
        this.sslClientSerial = sslClientSerial;
        this.sslIssuerDn = sslIssuerDn;
        this.gssAuth = gssAuth;
        this.gssPrinc = gssPrinc;
        this.gssEnc = gssEnc;
        this.leaderPid = leaderPid;
        this.queryId = queryId;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.datid</code>.
     */
    public Long getDatid() {
        return this.datid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.datid</code>.
     */
    public void setDatid(Long datid) {
        this.datid = datid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.pid</code>.
     */
    public Integer getPid() {
        return this.pid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.pid</code>.
     */
    public void setPid(Integer pid) {
        this.pid = pid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.usesysid</code>.
     */
    public Long getUsesysid() {
        return this.usesysid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.usesysid</code>.
     */
    public void setUsesysid(Long usesysid) {
        this.usesysid = usesysid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.application_name</code>.
     */
    public String getApplicationName() {
        return this.applicationName;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.application_name</code>.
     */
    public void setApplicationName(String applicationName) {
        this.applicationName = applicationName;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.state</code>.
     */
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.query</code>.
     */
    public String getQuery() {
        return this.query;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.query</code>.
     */
    public void setQuery(String query) {
        this.query = query;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.wait_event_type</code>.
     */
    public String getWaitEventType() {
        return this.waitEventType;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.wait_event_type</code>.
     */
    public void setWaitEventType(String waitEventType) {
        this.waitEventType = waitEventType;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.wait_event</code>.
     */
    public String getWaitEvent() {
        return this.waitEvent;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.wait_event</code>.
     */
    public void setWaitEvent(String waitEvent) {
        this.waitEvent = waitEvent;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.xact_start</code>.
     */
    public OffsetDateTime getXactStart() {
        return this.xactStart;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.xact_start</code>.
     */
    public void setXactStart(OffsetDateTime xactStart) {
        this.xactStart = xactStart;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.query_start</code>.
     */
    public OffsetDateTime getQueryStart() {
        return this.queryStart;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.query_start</code>.
     */
    public void setQueryStart(OffsetDateTime queryStart) {
        this.queryStart = queryStart;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.backend_start</code>.
     */
    public OffsetDateTime getBackendStart() {
        return this.backendStart;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.backend_start</code>.
     */
    public void setBackendStart(OffsetDateTime backendStart) {
        this.backendStart = backendStart;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.state_change</code>.
     */
    public OffsetDateTime getStateChange() {
        return this.stateChange;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.state_change</code>.
     */
    public void setStateChange(OffsetDateTime stateChange) {
        this.stateChange = stateChange;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getClientAddr() {
        return this.clientAddr;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setClientAddr(Object clientAddr) {
        this.clientAddr = clientAddr;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.client_hostname</code>.
     */
    public String getClientHostname() {
        return this.clientHostname;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.client_hostname</code>.
     */
    public void setClientHostname(String clientHostname) {
        this.clientHostname = clientHostname;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.client_port</code>.
     */
    public Integer getClientPort() {
        return this.clientPort;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.client_port</code>.
     */
    public void setClientPort(Integer clientPort) {
        this.clientPort = clientPort;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.backend_xid</code>.
     */
    public Long getBackendXid() {
        return this.backendXid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.backend_xid</code>.
     */
    public void setBackendXid(Long backendXid) {
        this.backendXid = backendXid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.backend_xmin</code>.
     */
    public Long getBackendXmin() {
        return this.backendXmin;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.backend_xmin</code>.
     */
    public void setBackendXmin(Long backendXmin) {
        this.backendXmin = backendXmin;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.backend_type</code>.
     */
    public String getBackendType() {
        return this.backendType;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.backend_type</code>.
     */
    public void setBackendType(String backendType) {
        this.backendType = backendType;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.ssl</code>.
     */
    public Boolean getSsl() {
        return this.ssl;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.ssl</code>.
     */
    public void setSsl(Boolean ssl) {
        this.ssl = ssl;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.sslversion</code>.
     */
    public String getSslversion() {
        return this.sslversion;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.sslversion</code>.
     */
    public void setSslversion(String sslversion) {
        this.sslversion = sslversion;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.sslcipher</code>.
     */
    public String getSslcipher() {
        return this.sslcipher;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.sslcipher</code>.
     */
    public void setSslcipher(String sslcipher) {
        this.sslcipher = sslcipher;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.sslbits</code>.
     */
    public Integer getSslbits() {
        return this.sslbits;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.sslbits</code>.
     */
    public void setSslbits(Integer sslbits) {
        this.sslbits = sslbits;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.ssl_client_dn</code>.
     */
    public String getSslClientDn() {
        return this.sslClientDn;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.ssl_client_dn</code>.
     */
    public void setSslClientDn(String sslClientDn) {
        this.sslClientDn = sslClientDn;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_get_activity.ssl_client_serial</code>.
     */
    public BigDecimal getSslClientSerial() {
        return this.sslClientSerial;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_get_activity.ssl_client_serial</code>.
     */
    public void setSslClientSerial(BigDecimal sslClientSerial) {
        this.sslClientSerial = sslClientSerial;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.ssl_issuer_dn</code>.
     */
    public String getSslIssuerDn() {
        return this.sslIssuerDn;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.ssl_issuer_dn</code>.
     */
    public void setSslIssuerDn(String sslIssuerDn) {
        this.sslIssuerDn = sslIssuerDn;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.gss_auth</code>.
     */
    public Boolean getGssAuth() {
        return this.gssAuth;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.gss_auth</code>.
     */
    public void setGssAuth(Boolean gssAuth) {
        this.gssAuth = gssAuth;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.gss_princ</code>.
     */
    public String getGssPrinc() {
        return this.gssPrinc;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.gss_princ</code>.
     */
    public void setGssPrinc(String gssPrinc) {
        this.gssPrinc = gssPrinc;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.gss_enc</code>.
     */
    public Boolean getGssEnc() {
        return this.gssEnc;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.gss_enc</code>.
     */
    public void setGssEnc(Boolean gssEnc) {
        this.gssEnc = gssEnc;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.leader_pid</code>.
     */
    public Integer getLeaderPid() {
        return this.leaderPid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.leader_pid</code>.
     */
    public void setLeaderPid(Integer leaderPid) {
        this.leaderPid = leaderPid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_get_activity.query_id</code>.
     */
    public Long getQueryId() {
        return this.queryId;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_get_activity.query_id</code>.
     */
    public void setQueryId(Long queryId) {
        this.queryId = queryId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgStatGetActivity other = (PgStatGetActivity) obj;
        if (this.datid == null) {
            if (other.datid != null)
                return false;
        }
        else if (!this.datid.equals(other.datid))
            return false;
        if (this.pid == null) {
            if (other.pid != null)
                return false;
        }
        else if (!this.pid.equals(other.pid))
            return false;
        if (this.usesysid == null) {
            if (other.usesysid != null)
                return false;
        }
        else if (!this.usesysid.equals(other.usesysid))
            return false;
        if (this.applicationName == null) {
            if (other.applicationName != null)
                return false;
        }
        else if (!this.applicationName.equals(other.applicationName))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.query == null) {
            if (other.query != null)
                return false;
        }
        else if (!this.query.equals(other.query))
            return false;
        if (this.waitEventType == null) {
            if (other.waitEventType != null)
                return false;
        }
        else if (!this.waitEventType.equals(other.waitEventType))
            return false;
        if (this.waitEvent == null) {
            if (other.waitEvent != null)
                return false;
        }
        else if (!this.waitEvent.equals(other.waitEvent))
            return false;
        if (this.xactStart == null) {
            if (other.xactStart != null)
                return false;
        }
        else if (!this.xactStart.equals(other.xactStart))
            return false;
        if (this.queryStart == null) {
            if (other.queryStart != null)
                return false;
        }
        else if (!this.queryStart.equals(other.queryStart))
            return false;
        if (this.backendStart == null) {
            if (other.backendStart != null)
                return false;
        }
        else if (!this.backendStart.equals(other.backendStart))
            return false;
        if (this.stateChange == null) {
            if (other.stateChange != null)
                return false;
        }
        else if (!this.stateChange.equals(other.stateChange))
            return false;
        if (this.clientAddr == null) {
            if (other.clientAddr != null)
                return false;
        }
        else if (!this.clientAddr.equals(other.clientAddr))
            return false;
        if (this.clientHostname == null) {
            if (other.clientHostname != null)
                return false;
        }
        else if (!this.clientHostname.equals(other.clientHostname))
            return false;
        if (this.clientPort == null) {
            if (other.clientPort != null)
                return false;
        }
        else if (!this.clientPort.equals(other.clientPort))
            return false;
        if (this.backendXid == null) {
            if (other.backendXid != null)
                return false;
        }
        else if (!this.backendXid.equals(other.backendXid))
            return false;
        if (this.backendXmin == null) {
            if (other.backendXmin != null)
                return false;
        }
        else if (!this.backendXmin.equals(other.backendXmin))
            return false;
        if (this.backendType == null) {
            if (other.backendType != null)
                return false;
        }
        else if (!this.backendType.equals(other.backendType))
            return false;
        if (this.ssl == null) {
            if (other.ssl != null)
                return false;
        }
        else if (!this.ssl.equals(other.ssl))
            return false;
        if (this.sslversion == null) {
            if (other.sslversion != null)
                return false;
        }
        else if (!this.sslversion.equals(other.sslversion))
            return false;
        if (this.sslcipher == null) {
            if (other.sslcipher != null)
                return false;
        }
        else if (!this.sslcipher.equals(other.sslcipher))
            return false;
        if (this.sslbits == null) {
            if (other.sslbits != null)
                return false;
        }
        else if (!this.sslbits.equals(other.sslbits))
            return false;
        if (this.sslClientDn == null) {
            if (other.sslClientDn != null)
                return false;
        }
        else if (!this.sslClientDn.equals(other.sslClientDn))
            return false;
        if (this.sslClientSerial == null) {
            if (other.sslClientSerial != null)
                return false;
        }
        else if (!this.sslClientSerial.equals(other.sslClientSerial))
            return false;
        if (this.sslIssuerDn == null) {
            if (other.sslIssuerDn != null)
                return false;
        }
        else if (!this.sslIssuerDn.equals(other.sslIssuerDn))
            return false;
        if (this.gssAuth == null) {
            if (other.gssAuth != null)
                return false;
        }
        else if (!this.gssAuth.equals(other.gssAuth))
            return false;
        if (this.gssPrinc == null) {
            if (other.gssPrinc != null)
                return false;
        }
        else if (!this.gssPrinc.equals(other.gssPrinc))
            return false;
        if (this.gssEnc == null) {
            if (other.gssEnc != null)
                return false;
        }
        else if (!this.gssEnc.equals(other.gssEnc))
            return false;
        if (this.leaderPid == null) {
            if (other.leaderPid != null)
                return false;
        }
        else if (!this.leaderPid.equals(other.leaderPid))
            return false;
        if (this.queryId == null) {
            if (other.queryId != null)
                return false;
        }
        else if (!this.queryId.equals(other.queryId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.datid == null) ? 0 : this.datid.hashCode());
        result = prime * result + ((this.pid == null) ? 0 : this.pid.hashCode());
        result = prime * result + ((this.usesysid == null) ? 0 : this.usesysid.hashCode());
        result = prime * result + ((this.applicationName == null) ? 0 : this.applicationName.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.query == null) ? 0 : this.query.hashCode());
        result = prime * result + ((this.waitEventType == null) ? 0 : this.waitEventType.hashCode());
        result = prime * result + ((this.waitEvent == null) ? 0 : this.waitEvent.hashCode());
        result = prime * result + ((this.xactStart == null) ? 0 : this.xactStart.hashCode());
        result = prime * result + ((this.queryStart == null) ? 0 : this.queryStart.hashCode());
        result = prime * result + ((this.backendStart == null) ? 0 : this.backendStart.hashCode());
        result = prime * result + ((this.stateChange == null) ? 0 : this.stateChange.hashCode());
        result = prime * result + ((this.clientAddr == null) ? 0 : this.clientAddr.hashCode());
        result = prime * result + ((this.clientHostname == null) ? 0 : this.clientHostname.hashCode());
        result = prime * result + ((this.clientPort == null) ? 0 : this.clientPort.hashCode());
        result = prime * result + ((this.backendXid == null) ? 0 : this.backendXid.hashCode());
        result = prime * result + ((this.backendXmin == null) ? 0 : this.backendXmin.hashCode());
        result = prime * result + ((this.backendType == null) ? 0 : this.backendType.hashCode());
        result = prime * result + ((this.ssl == null) ? 0 : this.ssl.hashCode());
        result = prime * result + ((this.sslversion == null) ? 0 : this.sslversion.hashCode());
        result = prime * result + ((this.sslcipher == null) ? 0 : this.sslcipher.hashCode());
        result = prime * result + ((this.sslbits == null) ? 0 : this.sslbits.hashCode());
        result = prime * result + ((this.sslClientDn == null) ? 0 : this.sslClientDn.hashCode());
        result = prime * result + ((this.sslClientSerial == null) ? 0 : this.sslClientSerial.hashCode());
        result = prime * result + ((this.sslIssuerDn == null) ? 0 : this.sslIssuerDn.hashCode());
        result = prime * result + ((this.gssAuth == null) ? 0 : this.gssAuth.hashCode());
        result = prime * result + ((this.gssPrinc == null) ? 0 : this.gssPrinc.hashCode());
        result = prime * result + ((this.gssEnc == null) ? 0 : this.gssEnc.hashCode());
        result = prime * result + ((this.leaderPid == null) ? 0 : this.leaderPid.hashCode());
        result = prime * result + ((this.queryId == null) ? 0 : this.queryId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgStatGetActivity (");

        sb.append(datid);
        sb.append(", ").append(pid);
        sb.append(", ").append(usesysid);
        sb.append(", ").append(applicationName);
        sb.append(", ").append(state);
        sb.append(", ").append(query);
        sb.append(", ").append(waitEventType);
        sb.append(", ").append(waitEvent);
        sb.append(", ").append(xactStart);
        sb.append(", ").append(queryStart);
        sb.append(", ").append(backendStart);
        sb.append(", ").append(stateChange);
        sb.append(", ").append(clientAddr);
        sb.append(", ").append(clientHostname);
        sb.append(", ").append(clientPort);
        sb.append(", ").append(backendXid);
        sb.append(", ").append(backendXmin);
        sb.append(", ").append(backendType);
        sb.append(", ").append(ssl);
        sb.append(", ").append(sslversion);
        sb.append(", ").append(sslcipher);
        sb.append(", ").append(sslbits);
        sb.append(", ").append(sslClientDn);
        sb.append(", ").append(sslClientSerial);
        sb.append(", ").append(sslIssuerDn);
        sb.append(", ").append(gssAuth);
        sb.append(", ").append(gssPrinc);
        sb.append(", ").append(gssEnc);
        sb.append(", ").append(leaderPid);
        sb.append(", ").append(queryId);

        sb.append(")");
        return sb.toString();
    }
}
