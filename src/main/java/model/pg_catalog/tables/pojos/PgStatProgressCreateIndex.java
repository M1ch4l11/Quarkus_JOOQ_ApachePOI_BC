/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgStatProgressCreateIndex implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer pid;
    private Long datid;
    private String datname;
    private Long relid;
    private Long indexRelid;
    private String command;
    private String phase;
    private Long lockersTotal;
    private Long lockersDone;
    private Long currentLockerPid;
    private Long blocksTotal;
    private Long blocksDone;
    private Long tuplesTotal;
    private Long tuplesDone;
    private Long partitionsTotal;
    private Long partitionsDone;

    public PgStatProgressCreateIndex() {}

    public PgStatProgressCreateIndex(PgStatProgressCreateIndex value) {
        this.pid = value.pid;
        this.datid = value.datid;
        this.datname = value.datname;
        this.relid = value.relid;
        this.indexRelid = value.indexRelid;
        this.command = value.command;
        this.phase = value.phase;
        this.lockersTotal = value.lockersTotal;
        this.lockersDone = value.lockersDone;
        this.currentLockerPid = value.currentLockerPid;
        this.blocksTotal = value.blocksTotal;
        this.blocksDone = value.blocksDone;
        this.tuplesTotal = value.tuplesTotal;
        this.tuplesDone = value.tuplesDone;
        this.partitionsTotal = value.partitionsTotal;
        this.partitionsDone = value.partitionsDone;
    }

    public PgStatProgressCreateIndex(
        Integer pid,
        Long datid,
        String datname,
        Long relid,
        Long indexRelid,
        String command,
        String phase,
        Long lockersTotal,
        Long lockersDone,
        Long currentLockerPid,
        Long blocksTotal,
        Long blocksDone,
        Long tuplesTotal,
        Long tuplesDone,
        Long partitionsTotal,
        Long partitionsDone
    ) {
        this.pid = pid;
        this.datid = datid;
        this.datname = datname;
        this.relid = relid;
        this.indexRelid = indexRelid;
        this.command = command;
        this.phase = phase;
        this.lockersTotal = lockersTotal;
        this.lockersDone = lockersDone;
        this.currentLockerPid = currentLockerPid;
        this.blocksTotal = blocksTotal;
        this.blocksDone = blocksDone;
        this.tuplesTotal = tuplesTotal;
        this.tuplesDone = tuplesDone;
        this.partitionsTotal = partitionsTotal;
        this.partitionsDone = partitionsDone;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_create_index.pid</code>.
     */
    public Integer getPid() {
        return this.pid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_create_index.pid</code>.
     */
    public void setPid(Integer pid) {
        this.pid = pid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_create_index.datid</code>.
     */
    public Long getDatid() {
        return this.datid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_create_index.datid</code>.
     */
    public void setDatid(Long datid) {
        this.datid = datid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_create_index.datname</code>.
     */
    public String getDatname() {
        return this.datname;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_create_index.datname</code>.
     */
    public void setDatname(String datname) {
        this.datname = datname;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_create_index.relid</code>.
     */
    public Long getRelid() {
        return this.relid;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_create_index.relid</code>.
     */
    public void setRelid(Long relid) {
        this.relid = relid;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.index_relid</code>.
     */
    public Long getIndexRelid() {
        return this.indexRelid;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.index_relid</code>.
     */
    public void setIndexRelid(Long indexRelid) {
        this.indexRelid = indexRelid;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_create_index.command</code>.
     */
    public String getCommand() {
        return this.command;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_create_index.command</code>.
     */
    public void setCommand(String command) {
        this.command = command;
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_progress_create_index.phase</code>.
     */
    public String getPhase() {
        return this.phase;
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_progress_create_index.phase</code>.
     */
    public void setPhase(String phase) {
        this.phase = phase;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.lockers_total</code>.
     */
    public Long getLockersTotal() {
        return this.lockersTotal;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.lockers_total</code>.
     */
    public void setLockersTotal(Long lockersTotal) {
        this.lockersTotal = lockersTotal;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.lockers_done</code>.
     */
    public Long getLockersDone() {
        return this.lockersDone;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.lockers_done</code>.
     */
    public void setLockersDone(Long lockersDone) {
        this.lockersDone = lockersDone;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.current_locker_pid</code>.
     */
    public Long getCurrentLockerPid() {
        return this.currentLockerPid;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.current_locker_pid</code>.
     */
    public void setCurrentLockerPid(Long currentLockerPid) {
        this.currentLockerPid = currentLockerPid;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.blocks_total</code>.
     */
    public Long getBlocksTotal() {
        return this.blocksTotal;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.blocks_total</code>.
     */
    public void setBlocksTotal(Long blocksTotal) {
        this.blocksTotal = blocksTotal;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.blocks_done</code>.
     */
    public Long getBlocksDone() {
        return this.blocksDone;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.blocks_done</code>.
     */
    public void setBlocksDone(Long blocksDone) {
        this.blocksDone = blocksDone;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.tuples_total</code>.
     */
    public Long getTuplesTotal() {
        return this.tuplesTotal;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.tuples_total</code>.
     */
    public void setTuplesTotal(Long tuplesTotal) {
        this.tuplesTotal = tuplesTotal;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.tuples_done</code>.
     */
    public Long getTuplesDone() {
        return this.tuplesDone;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.tuples_done</code>.
     */
    public void setTuplesDone(Long tuplesDone) {
        this.tuplesDone = tuplesDone;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.partitions_total</code>.
     */
    public Long getPartitionsTotal() {
        return this.partitionsTotal;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.partitions_total</code>.
     */
    public void setPartitionsTotal(Long partitionsTotal) {
        this.partitionsTotal = partitionsTotal;
    }

    /**
     * Getter for
     * <code>pg_catalog.pg_stat_progress_create_index.partitions_done</code>.
     */
    public Long getPartitionsDone() {
        return this.partitionsDone;
    }

    /**
     * Setter for
     * <code>pg_catalog.pg_stat_progress_create_index.partitions_done</code>.
     */
    public void setPartitionsDone(Long partitionsDone) {
        this.partitionsDone = partitionsDone;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgStatProgressCreateIndex other = (PgStatProgressCreateIndex) obj;
        if (this.pid == null) {
            if (other.pid != null)
                return false;
        }
        else if (!this.pid.equals(other.pid))
            return false;
        if (this.datid == null) {
            if (other.datid != null)
                return false;
        }
        else if (!this.datid.equals(other.datid))
            return false;
        if (this.datname == null) {
            if (other.datname != null)
                return false;
        }
        else if (!this.datname.equals(other.datname))
            return false;
        if (this.relid == null) {
            if (other.relid != null)
                return false;
        }
        else if (!this.relid.equals(other.relid))
            return false;
        if (this.indexRelid == null) {
            if (other.indexRelid != null)
                return false;
        }
        else if (!this.indexRelid.equals(other.indexRelid))
            return false;
        if (this.command == null) {
            if (other.command != null)
                return false;
        }
        else if (!this.command.equals(other.command))
            return false;
        if (this.phase == null) {
            if (other.phase != null)
                return false;
        }
        else if (!this.phase.equals(other.phase))
            return false;
        if (this.lockersTotal == null) {
            if (other.lockersTotal != null)
                return false;
        }
        else if (!this.lockersTotal.equals(other.lockersTotal))
            return false;
        if (this.lockersDone == null) {
            if (other.lockersDone != null)
                return false;
        }
        else if (!this.lockersDone.equals(other.lockersDone))
            return false;
        if (this.currentLockerPid == null) {
            if (other.currentLockerPid != null)
                return false;
        }
        else if (!this.currentLockerPid.equals(other.currentLockerPid))
            return false;
        if (this.blocksTotal == null) {
            if (other.blocksTotal != null)
                return false;
        }
        else if (!this.blocksTotal.equals(other.blocksTotal))
            return false;
        if (this.blocksDone == null) {
            if (other.blocksDone != null)
                return false;
        }
        else if (!this.blocksDone.equals(other.blocksDone))
            return false;
        if (this.tuplesTotal == null) {
            if (other.tuplesTotal != null)
                return false;
        }
        else if (!this.tuplesTotal.equals(other.tuplesTotal))
            return false;
        if (this.tuplesDone == null) {
            if (other.tuplesDone != null)
                return false;
        }
        else if (!this.tuplesDone.equals(other.tuplesDone))
            return false;
        if (this.partitionsTotal == null) {
            if (other.partitionsTotal != null)
                return false;
        }
        else if (!this.partitionsTotal.equals(other.partitionsTotal))
            return false;
        if (this.partitionsDone == null) {
            if (other.partitionsDone != null)
                return false;
        }
        else if (!this.partitionsDone.equals(other.partitionsDone))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.pid == null) ? 0 : this.pid.hashCode());
        result = prime * result + ((this.datid == null) ? 0 : this.datid.hashCode());
        result = prime * result + ((this.datname == null) ? 0 : this.datname.hashCode());
        result = prime * result + ((this.relid == null) ? 0 : this.relid.hashCode());
        result = prime * result + ((this.indexRelid == null) ? 0 : this.indexRelid.hashCode());
        result = prime * result + ((this.command == null) ? 0 : this.command.hashCode());
        result = prime * result + ((this.phase == null) ? 0 : this.phase.hashCode());
        result = prime * result + ((this.lockersTotal == null) ? 0 : this.lockersTotal.hashCode());
        result = prime * result + ((this.lockersDone == null) ? 0 : this.lockersDone.hashCode());
        result = prime * result + ((this.currentLockerPid == null) ? 0 : this.currentLockerPid.hashCode());
        result = prime * result + ((this.blocksTotal == null) ? 0 : this.blocksTotal.hashCode());
        result = prime * result + ((this.blocksDone == null) ? 0 : this.blocksDone.hashCode());
        result = prime * result + ((this.tuplesTotal == null) ? 0 : this.tuplesTotal.hashCode());
        result = prime * result + ((this.tuplesDone == null) ? 0 : this.tuplesDone.hashCode());
        result = prime * result + ((this.partitionsTotal == null) ? 0 : this.partitionsTotal.hashCode());
        result = prime * result + ((this.partitionsDone == null) ? 0 : this.partitionsDone.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgStatProgressCreateIndex (");

        sb.append(pid);
        sb.append(", ").append(datid);
        sb.append(", ").append(datname);
        sb.append(", ").append(relid);
        sb.append(", ").append(indexRelid);
        sb.append(", ").append(command);
        sb.append(", ").append(phase);
        sb.append(", ").append(lockersTotal);
        sb.append(", ").append(lockersDone);
        sb.append(", ").append(currentLockerPid);
        sb.append(", ").append(blocksTotal);
        sb.append(", ").append(blocksDone);
        sb.append(", ").append(tuplesTotal);
        sb.append(", ").append(tuplesDone);
        sb.append(", ").append(partitionsTotal);
        sb.append(", ").append(partitionsDone);

        sb.append(")");
        return sb.toString();
    }
}
