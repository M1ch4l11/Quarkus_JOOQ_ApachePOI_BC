/*
 * This file is generated by jOOQ.
 */
package model.pg_catalog.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgTsConfigMap implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long mapcfg;
    private Integer maptokentype;
    private Integer mapseqno;
    private Long mapdict;

    public PgTsConfigMap() {}

    public PgTsConfigMap(PgTsConfigMap value) {
        this.mapcfg = value.mapcfg;
        this.maptokentype = value.maptokentype;
        this.mapseqno = value.mapseqno;
        this.mapdict = value.mapdict;
    }

    public PgTsConfigMap(
        Long mapcfg,
        Integer maptokentype,
        Integer mapseqno,
        Long mapdict
    ) {
        this.mapcfg = mapcfg;
        this.maptokentype = maptokentype;
        this.mapseqno = mapseqno;
        this.mapdict = mapdict;
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.mapcfg</code>.
     */
    public Long getMapcfg() {
        return this.mapcfg;
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.mapcfg</code>.
     */
    public void setMapcfg(Long mapcfg) {
        this.mapcfg = mapcfg;
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.maptokentype</code>.
     */
    public Integer getMaptokentype() {
        return this.maptokentype;
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.maptokentype</code>.
     */
    public void setMaptokentype(Integer maptokentype) {
        this.maptokentype = maptokentype;
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.mapseqno</code>.
     */
    public Integer getMapseqno() {
        return this.mapseqno;
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.mapseqno</code>.
     */
    public void setMapseqno(Integer mapseqno) {
        this.mapseqno = mapseqno;
    }

    /**
     * Getter for <code>pg_catalog.pg_ts_config_map.mapdict</code>.
     */
    public Long getMapdict() {
        return this.mapdict;
    }

    /**
     * Setter for <code>pg_catalog.pg_ts_config_map.mapdict</code>.
     */
    public void setMapdict(Long mapdict) {
        this.mapdict = mapdict;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgTsConfigMap other = (PgTsConfigMap) obj;
        if (this.mapcfg == null) {
            if (other.mapcfg != null)
                return false;
        }
        else if (!this.mapcfg.equals(other.mapcfg))
            return false;
        if (this.maptokentype == null) {
            if (other.maptokentype != null)
                return false;
        }
        else if (!this.maptokentype.equals(other.maptokentype))
            return false;
        if (this.mapseqno == null) {
            if (other.mapseqno != null)
                return false;
        }
        else if (!this.mapseqno.equals(other.mapseqno))
            return false;
        if (this.mapdict == null) {
            if (other.mapdict != null)
                return false;
        }
        else if (!this.mapdict.equals(other.mapdict))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.mapcfg == null) ? 0 : this.mapcfg.hashCode());
        result = prime * result + ((this.maptokentype == null) ? 0 : this.maptokentype.hashCode());
        result = prime * result + ((this.mapseqno == null) ? 0 : this.mapseqno.hashCode());
        result = prime * result + ((this.mapdict == null) ? 0 : this.mapdict.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgTsConfigMap (");

        sb.append(mapcfg);
        sb.append(", ").append(maptokentype);
        sb.append(", ").append(mapseqno);
        sb.append(", ").append(mapdict);

        sb.append(")");
        return sb.toString();
    }
}
